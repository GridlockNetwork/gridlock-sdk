import { Guardian } from './Guardians';

export interface User {
  _id: string;
  ipAddressInfo: {
    city: string;
    zipCode: string;
    countryName: string;
    countryCode: string;
    ip: string;
  };
  deviceInfo: DeviceInfo;
  membership?: {
    type: string;
    updated: string;
    created?: string;
    plan?: string;
    expires_at: string;
  };
  active: boolean;
  emailVerified?: boolean;
  phoneVerified: boolean;
  walletList: string[];
  isSuperAdmin: boolean;
  isTestUser: boolean;
  autogenerated: boolean;
  pool_version: number;
  addressBook: {
    alias: string;
    address: string;
  }[];
  created: string;
  lastLogin: string;
  analytics: {
    walletCount: number;
    transactionCount: number;
    referralCount: number;
  }[];
  nodePool: NodePool[];
  email: string;
  username: string;
  name: string;
  lastname: string;
  password: string;
  emailVerificationCode: string;
  nodeId: string;
  nodePublicKey: string;
  googleId: string | null;
  iosId: string | null;
  versionCode: string;
  firebaseToken: string;
  phone: string;
  phoneCountryCode: string;
  phoneRaw: string;
  token: string;
  biometricPublicKey: string;
  profilePhotoUrl?: string;
  profilePhotoReference?: string;
  mintStatus: MintStatus[];
  googleDriveBackup?: {
    enabled: boolean;
    lastUpdated: Date;
  };
  iCloudBackup?: {
    enabled: boolean;
    lastUpdated: Date;
  };
  eligibleForDiscount: {
    type: string;
    expiry?: Date;
  };
  adaptyId: string;
  ambassadorProgram: {
    ambassadorId: string | null;
    referredByAmbassador: string | null;
    rewardsClaimed: string[];
  };
}

export interface NodePoolState {
  action?: string;
  node?: { _id?: string; nodeId?: string; name?: string };
  approvedBy?: { type: string; approved?: boolean; nodeId?: string }[];
}

export interface NodePool {
  _id?: string;
  type: string;
  active: boolean;
  nodeId?: string;
  name: string;
  publicKey?: string;
  model?: string;
  created?: string;
  lastSeen?: string;
  lastResponse?: string;
  deviceId?: string;
  code: string;
  state?: NodePoolState;
  healthStatus?: string;
}

export interface DeviceInfo {
  versionCode: number;
  platform: string;
  platformVersion: string;
  brand: string;
  model: string;
  totalMemory: number | null;
  batteryLevel: number | null;
  isEmulator: boolean | null;
}

export interface ProtectingUser {
  _id: string;
  name: string;
  nodeId: string;
  profilePhotoUrl?: string;
  nodePool: NodePool[];
  actionRequired?: { type: 'restoreAccount'; code: string }; // TODO add enum
}

export interface MintStatus {
  _id: string;
  transactionId: string;
  productId: string;
  status: string;
  createdDate: string;
  updatedDate: string;
  coins: CoinStatus[];
}

export interface CoinStatus {
  _id: string;
  name: string;
  state: string;
  updatedDate: string;
}

export interface ProtectingInvite {
  _id: string;
  nodePoolId: string;
  code: string;
  name: string;
  nodeId: string;
  profilePhotoUrl?: string;
}

export interface RegisterData {
  email: string;
  password: string;
  guardians: Guardian[];
}